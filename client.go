package main



import (
	"fmt"
	"io"
	"log"
	"net/http"
)

func main() {
	req, err := http.NewRequest("GET", "http://10.190.212.195:8080/api/song", nil)
	if err != nil {
		log.Fatalln(err)
	}

	req.Header.Set("Accept", "application/json")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		log.Fatalln(err)
	}

	defer resp.Body.Close()


	b, err := io.ReadAll(resp.Body)

	// b, err := ioutil.ReadAll(resp.Body)  Go.1.15 and earlier

	if err != nil {

		log.Fatalln(err)

	}



	fmt.Println(string(b))
}












































/*import (
  //"os/exec"
  //"fmt"
	"net/http"
	"log"

)
func main() { 
       // Generated by curl-to-Go: https://mholt.github.io/curl-to-go

//  curl -v  http://10.190.212.195:8080/api/song
//
//

resp, err := http.Get("http://10.190.212.195:8080/api/song")
if err != nil {
	// handle err
  log.Println(err)
}
defer resp.Body.Close()
b, err := io.ReadAll(resp.Body)
// b, err := ioutil.ReadAll(resp.Body)  Go.1.15 and earlier
if err != nil {
  log.Fatalln(err)
}

log.Println(string(b))
//s:=string(resp)
  //log.Println("Response:", s)
  
      /*log.Println("Checking if started...")
      err := exec.Command("firefox", "http://127.0.0.1:8080").Run()
        if err != nil {
            log.Println(err)
        }
        resp, err := http.Get("http://10.190.212.195:8080/api/song")
        if err != nil {
            log.Println("Failed:", err)

        }else {
          log.Println("Response:", resp)
        }	
}*/
